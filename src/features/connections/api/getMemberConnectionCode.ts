import type { SupabaseClient } from '@supabase/supabase-js';
import type { Database } from '@/shared/types/database';
import type { MemberConnectionCode } from '../types';
import { toDomainMemberCode } from '../transformers';
import { logger } from '@/shared';
import { getAuthIdOrThrow } from '@/shared/utils/auth-helpers';

export async function getMemberConnectionCode(
  supabase: SupabaseClient<Database>,
  communityId: string,
): Promise<MemberConnectionCode> {
  logger.debug('ðŸ”— API: Getting member connection code', { communityId });

  try {
    const currentUserId = await getAuthIdOrThrow(supabase);

    // Get the user's code for this community
    // Note: Codes are now auto-generated by database trigger when users join communities
    const { data: existingCode, error: fetchError } = await supabase
      .from('community_member_codes')
      .select('*')
      .eq('user_id', currentUserId)
      .eq('community_id', communityId)
      .eq('is_active', true)
      .maybeSingle();

    if (fetchError) {
      logger.error('ðŸ”— API: Failed to fetch member code', {
        error: fetchError,
        communityId,
        userId: currentUserId,
      });
      throw fetchError;
    }

    if (!existingCode) {
      // This should not happen as codes are auto-generated when joining communities
      const error = new Error('No connection code found for user in this community. User may not be a member.');
      logger.error('ðŸ”— API: No connection code found', {
        communityId,
        userId: currentUserId,
      });
      throw error;
    }

    const memberCode = toDomainMemberCode(existingCode);
    logger.debug('ðŸ”— API: Found member code', {
      communityId,
      code: memberCode.code,
    });
    return memberCode;
  } catch (error) {
    logger.error('ðŸ”— API: Error getting member connection code', {
      error,
      communityId,
    });
    throw error;
  }
}